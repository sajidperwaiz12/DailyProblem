/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<Integer> preorder(Node root) {
        // In this problem we have to do preorder traversal in N-ary tree
        // That means we have to store root first and then its children
        // we will take the help of helper function to solve this problem in which we will pass
        // two things first is root and second List

        List<Integer> ans = new ArrayList<>();

        if (root == null) return ans;

        helper(root, ans);
        return ans;
    }

    public static void helper(Node root, List<Integer> ans) {
        if (root == null) return ;

        ans.add(root.val);

        for (int i = 0; i < root.children.size(); i++) {
            helper(root.children.get(i), ans);
        }

    
    }
}